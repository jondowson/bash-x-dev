function f_multipids_display_success(){

local count;
local stageid;
local pid;
local source_hostname;
local source_pubIp;
local source_test;
local source_interface;

${spacer};
printf "%b\n" "${grB}--> Stage ${vp_stage_number} successful pids${rs}..";

# For the current stage count the number of successful pids.
count=0;
for pid in ${a_stage_pid_success[@]}
do
    stageid="$(echo ${pid} | cut -d '_' -f2)";
    if [[ "${vp_stage_number}" == "${stageid}" ]];then
        ((count++));
    fi;
done;

if [[ ${count} -gt 0 ]];then

    for pidstage in "${a_stage_pid_success[@]}"
    do
        pid="$(echo ${pidstage} | cut -d '_' -f1)";
        stageid="$(echo ${pidstage} | cut -d '_' -f2)";
        if [[ "${vp_stage_number}" == "${stageid}" ]];then 
            source_hostname="$(echo ${A_stage_pid_details[$i]}   | cut -d ',' -f1)";
            source_domain="$(echo ${A_stage_pid_details[$i]}     | cut -d ',' -f2)";
            source_interface="$(echo ${A_stage_pid_details[$i]}  | cut -d ',' -f3)";
            source_pubIp="$(echo ${A_stage_pid_details[$i]}      | cut -d ',' -f4)";
            source_gateway="$(echo ${A_stage_pid_details[$i]}    | cut -d ',' -f5)";

            ${dashLine};
            printf "%b\n" "${yl}--> Info - ${rs}PID:                 ${pid}";
            printf "%b\n" "${yl}--> Info - ${rs}Remote hostname:     ${source_hostname}";
            printf "%b\n" "${yl}--> Info - ${rs}Remote pubIp:        ${source_pubIp}";
            printf "%b\n" "${yl}--> Info - ${rs}Remote interface:    ${source_interface}";
            
        fi;
    done;

else
    printf "%b\n" "${yl}--> Info - ${rs} All pids failed!";
fi;
};
