function f_skeleton_multipids_display_fail(){

cat << EOF > "${vf_path_framework_home}projects/${project_name}/lib/functions/fp_multipids/fp_multipids_display_fail"
function fp_multipids_display_fail(){

local count;
local stageid;
local source_hostname;
local source_pubIp;
local source_test;
local source_interface;
local json_code;
local message;
local hint;

\${spacer};
printf "%b\n" "\${rdB}--> Showing failed pids..\${rs}";

count=0;
for i in "\${!A_stage_pid_fails[@]}"
do
    stageid="$(echo \${A_stage_pid_details[$i]} | cut -d ',' -f4)";
    if [[ "\${vp_stage_number}" == "\${stageid}" ]];then 
        ((count++));
    fi;
done;

if [[ \${#A_stage_pid_fails[@]} -ne 0 ]] && [[ \${count} -gt 0 ]];then

    for i in "\${!A_stage_pid_fails[@]}"
    do
        stageid="$(echo \${A_stage_pid_details[$i]} | cut -d ',' -f4)";
        if [[ "\${vp_stage_number}" == "\${stageid}" ]];then    
            source_hostname="$(echo \${A_stage_pid_details[\${i}]}   | cut -d ',' -f1)";
            source_interface="$(echo \${A_stage_pid_details[\${i}]}  | cut -d ',' -f2)";
            source_pubIp="$(echo \${A_stage_pid_details[\${i}]}      | cut -d ',' -f3)";

            json_code="$(echo vj_\${A_stage_pid_fails[\${i}]}  | cut -d ',' -f1)";
            message="$(echo \${A_stage_pid_fails[\${i}]}       | cut -d ',' -f2)";
            hint="$(echo \${A_stage_pid_fails[\${i}]}          | cut -d ',' -f3)";
            
            # Check if hint is a variable - if so use '!' for indirection to resolve to value.
            if [[ \${hint} == "vf_"* ]] || [[ \${hint} == "vp_"* ]] || [[ \${hint} == "vj_"* ]]; then hint=\${!hint}; fi;

            \${dashLine};
            printf "%b\n" "\${yl}--> Info - \${rs}PID:                 \${i}";
            printf "%b\n" "\${yl}--> Info - \${rs}Remote hostname:     \${source_hostname}";
            printf "%b\n" "\${yl}--> Info - \${rs}Remote pubIp:        \${source_pubIp}";
            printf "%b\n" "\${yl}--> Info - \${rs}Remote interface:    \${source_interface}";
            printf "%b\n" "\${yl}--> Info - \${rs}error.json:          \${json_code}";
            printf "%b\n" "\${yl}--> Info - \${rs}Message:             \${message}";
            printf "%b\n" "\${yl}--> Info - \${rs}Hint:                \${hint}";
        fi;
    done;

else
    printf "%b\n" "\${yl}--> Info - \${rs}All pids were successful!";
fi;
};
EOF
};
