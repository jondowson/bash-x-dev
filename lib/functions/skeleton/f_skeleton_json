
function f_skeleton_json(){

# To change the json files copy the value into a new temp.json file and then run.
# $ jq --indent 4 . temp.json > temp2.json
# Then after saving changes run this to flatten it and display to screen, then copy back into array value.
# $ jq --indent 0 . temp2.json 

A_json_project_template["arrays.json"]='{"comments":{"note1":"Arrays can be associative (unordered keypairs) or normal (ordered index).","note2":"The only required / processed field in this file is the 'name' and the other fields are included to be informative.","note3":"The name of the array will subsequently be prepended with 'a_' (index) or 'A_' (keypair).","do_nots":{"dn1":"Do NOT prepend the name below with 'a_' or 'A_' as it will be added by the framework.","dn2":"Do NOT forget to fill in the other fields as these will help to keep you on top of all of your arrays!"}},"arrays":{"project":"${project_name}","description":"These are all the arrays required by the project before it is called.","instructions":"Add section under either index or keypair. Only the name is required but other info will speed up development!","index":{"description":"The 'name' of arrays in this section are prepended with 'a_' (simple / index arrays)","array1":{"name":"relevant_index_name1","rationale":"what is this normal array used for?","populated":"name of function where this array is first populated","structure":"show what it contains e.g --> a_source_servers( tcsmsc-ref12 tcsmsc-ref11 tcsmsc-ref13 )"},"array2":{"name":"relevant_index_name2","rationale":"what is this normal array used for?","populated":"name of function where this array is first populated e.g. --> fp_S0_this_function","structure":"show what it contains e.g --> a_source_servers( tcsmsc-ref12 tcsmsc-ref11 tcsmsc-ref13 )"}},"keypair":{"description":"The name of arrays in this section are prepended with 'A_' (associative / keypair arrays)","array1":{"name":"relevant_keypair_name1","rationale":"what is this associative array used for?","populated":"name of function where this array is first populated e.g. --> fp_S1_this_function","structure":"show what it contains e.g --> A_variables_tests[vj_tests_group1_t1_from]={inventory_servers_prod1_service_default}"},"array2":{"name":"relevant_keypair_name2","rationale":"what is this associative array used for?","populated":"name of function where this array is first populated e.g. --> fp_S2_this_function","structure":"show what it contains e.g --> A_variables_tests[vj_tests_group1_t1_from]={inventory_servers_prod1_service_default}"}}}}';
A_json_project_template["errors.json"]='{"comments":{"note1":"Each stage has zero or more numbered errors. Below s0 has e1 and e2.","note2":"Each error has a message and a hint. Both can be either a static message or a runtime variable.","note3":"The reserved framework variable 'vf_dynamic_variable' can be assigned when catching an error and used.","do_nots":{"dn1":"Do NOT forget to remove this comments json block before deployment!","dn2":"Do NOT use commas in message and hint strings!"}},"errors":{"note":"Do NOT use commas in message and hint strings","s0":{"e1":{"message":"Relevant message!","hint":"either a static msg or use the dynamic variable 'vf_dynamic_error_msg'"},"e2":{"checktype":"check_path_file","path":"vf_framework_flags_ssh_keypath","message":"Bad path to private key!","hint":"static message or use a variable - e.g. --> vf_dynamic_error_msg"}},"s1":{"e1":{"message":"Failed to process json files!","hint":"Check creds + local / remote logs and file paths!"},"e2":{"message":"Inconsistent inventory / tests environment!","hint":"Use same environment for both!"}},"s2":{"e1":{"message":"short relevant message","hint":"vf_dynamic_error_msg"}}}}';
A_json_project_template["help.json"]='{"comments":{"note1":"The help json file is used for two purposes. To generate the help screen for the project and to define and set default values for all project flags.","note2":"The longname of the flag holds the other details within parenthsis. i.e. --longflag -shortflag","note3":"The flag type is used by the framework for display purpose and needs to be filled in if it a path.","do_nots":{"dn1":"Do NOT forget to define project flags in lowercase as UPPERCASE is reserved for the framework.","dn2":"Do NOT forget to REMOVE this comments block!"}},"help":{"project":"network-connectivity-checker","description":"Content for project help screen and where project flags are added.","instructions":"Add a new flag by inserting a new json block. For help screen add entries under usage section. Check framework help to avoid flag name clashes.","flags":{"cspath":{"shortflag":"csp","type":"path_folder_remote","about":"Remote path to checkerscript.","default":"/home/omndocker/scripts/"},"csname":{"shortflag":"csn","type":"","about":"Remote checkerscript name without file extension.","default":"network_connectivity_checker_cronjob"},"inventory":{"shortflag":"i","type":"path_file_local","about":"Json framework path.","default":"~/Workspace/eigental/bash-x-inventory/TC6000/ref/inventory.json"}},"usage":{"usage1":{"description":"Show the help menu for this project.","example":"bash-x --PROJECT project-name --HELP"},"usage2":{"description":"Run project using default values for all flags (set in project.json).","example":"bash-x --PROJECT project-name"}}}}';
A_json_project_template["project.json"]='{"comments":{"note1":"A project consists of one or more stages and each stage consists of one or more tasks. A task consists of one or more functions.","note2":"Stages must be numbered from 's1' upwards. i.e. s1,s2,s3 and within a stage, tasks and their functions must be numbered from '1' upwards. i.e. t1,t2,t3 and f1,f2,f3","note3":"Concurrent stages run their tasks/functions in a loop using the multipid functions.","do_nots":{"dn1":"Do NOT forget to REMOVE this comments block!"}},"project":{"name":"project-name-here","description":"Short description of what the project does.","version":"e.g. --> 1.0.1","repo":"git repo url","stages":{"s1":{"title":"Title of stage displayed to screen.","concurrent":"true (will create subprocesses) or false (single process)","concurrentMsg":"add display message if concurrent is true or leave empty","t1":{"title":"Title of task displayed to screen.","f1":"fp_S1_func_name"},"t2":{"title":"Title of task displayed to screen.","f1":"fp_S1_func_name","f2":"fp_S1_func_name"}},"s2":{"title":"Title of stage displayed to screen.","concurrent":"false","concurrentMsg":"","t1":{"title":"Title of task displayed to screen.","f1":"fp_S2_func_name","f2":"fp_S2_func_name"}},"s3":{"title":"Title of stage displayed to screen.","concurrent":"true","concurrentMsg":"add display message if concurrent is true or leave empty","t1":{"title":"Title of task displayed to screen.","f1":"fp_S3_func_name"}}}}}';
};
